name: CI

on:
  push: {}
  pull_request: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install -r source/requirements.txt

      - name: Run linter - hard errors only
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run linter - soft style guide
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

  build_push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: lint
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Tag vk-itmocraft Image
        env:
          OWNER_LC: ${{ github.repository_owner }}
        run: |
          OWNER_LC=$(echo "$OWNER_LC" | tr '[:upper:]' '[:lower:]')
          IMAGE="ghcr.io/${OWNER_LC}/vk-itmocraft"

          BUILD_CONTEXT=./app
          DOCKERFILE=./app/Dockerfile

          docker build -t $IMAGE:latest -f $DOCKERFILE $BUILD_CONTEXT
          docker tag $IMAGE:latest $IMAGE:${{ github.run_number }}

          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Push vk-itmocraft Image
        run: |
          docker push $IMAGE:latest
          docker push $IMAGE:${{ github.run_number }}

  # deploy:
  #   if: github.ref == 'refs/heads/master'
  #   needs: test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Execute SSH Commands
  #       uses: GPTED/SSH-My-Action@0.1
  #       with:
  #         HOST: ${{ secrets.SSH_HOST }}
  #         USER: bot_dev
  #         PORT: ${{ secrets.PORT }}
  #         PRIVATE_KEY: ${{ secrets.BOT_DEV_SSH_PRIVATE_KEY }}
  #         CMD: |
  #           cd /srv/bots/vk-itmocraft/app;
  #           git reset --hard HEAD;
  #           git pull;
  #           cd /srv/bots/vk-itmocraft;
  #           podman-compose up -d --build --force-recreate;
